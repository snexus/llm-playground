[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2", "setuptools_scm_azure_pipelines>=0.1"]
build-backend = "setuptools.build_meta"

[project]
name = "pyllmsearch"
description = "LLM Powered Advanced RAG Application"
dynamic = ["dependencies", "version"]
keywords = ["llm", "rag", "retrieval-augemented-generation","large-language-models",  "local", "splade", "hyde", "reranking", "chroma", "openai"]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

[project.optional-dependencies]

dev = [
    "black",
    "pytest",
    "pytest-cov",
    "ruff",
    "autodoc_pydantic",
    "sphinx",
    "sphinx-markdown-builder",
    "sphinx_rtd_theme"
]

azureparser = [
"azure-ai-documentintelligence==1.0.0b3",
"azure-identity==1.17.1"
]

[project.urls]
Homepage = "https://github.com/snexus/llm-search"
Documentation = "https://llm-search.readthedocs.io/en/latest/"

[tool.setuptools_scm]
write_to = "src/llmsearch/_version.py"
local_scheme = "no-local-version"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
dependencies = {file = ["requirements.txt"]}


[tool.ruff]
# Decrease the maximum line length to 79 characters.
line-length = 119
src = ["src"]

[project.scripts]
llmsearch = 'llmsearch.cli:main_cli'
llmsearchapi = 'llmsearch.api:main'

